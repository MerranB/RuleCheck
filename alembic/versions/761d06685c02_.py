"""empty message

Revision ID: 761d06685c02
Revises: 23981d6d5991
Create Date: 2025-10-02 08:12:01.462956

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "761d06685c02"
down_revision: Union[str, Sequence[str], None] = "23981d6d5991"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("audit_events", sa.Column("actor_id", sa.Integer(), nullable=True))
    op.add_column("audit_events", sa.Column("actor_role", sa.String(), nullable=False))
    op.add_column("audit_events", sa.Column("action_type", sa.String(), nullable=False))
    op.add_column(
        "audit_events", sa.Column("target_entity", sa.String(), nullable=True)
    )
    op.add_column("audit_events", sa.Column("previous_value", sa.JSON(), nullable=True))
    op.add_column("audit_events", sa.Column("new_value", sa.JSON(), nullable=True))
    op.add_column(
        "audit_events", sa.Column("matched_rule_ids", sa.JSON(), nullable=True)
    )
    op.add_column(
        "audit_events", sa.Column("decision_summary", sa.Text(), nullable=True)
    )
    op.add_column("audit_events", sa.Column("source", sa.String(), nullable=True))
    op.add_column(
        "audit_events", sa.Column("ip_address", postgresql.INET(), nullable=True)
    )
    op.add_column("audit_events", sa.Column("request_id", sa.UUID(), nullable=True))
    op.alter_column(
        "audit_events", "submission_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "audit_events", "decision_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "audit_events",
        "explanation",
        existing_type=sa.VARCHAR(),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.alter_column(
        "audit_events",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.TIMESTAMP(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.create_index(
        op.f("ix_audit_events_audit_events_id"), "audit_events", ["id"], unique=False
    )
    op.drop_column("audit_events", "user")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "audit_events",
        sa.Column("user", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix_audit_events_audit_events_id"), table_name="audit_events")
    op.alter_column(
        "audit_events",
        "timestamp",
        existing_type=sa.TIMESTAMP(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "audit_events",
        "explanation",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    op.alter_column(
        "audit_events", "decision_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "audit_events", "submission_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_column("audit_events", "request_id")
    op.drop_column("audit_events", "ip_address")
    op.drop_column("audit_events", "source")
    op.drop_column("audit_events", "decision_summary")
    op.drop_column("audit_events", "matched_rule_ids")
    op.drop_column("audit_events", "new_value")
    op.drop_column("audit_events", "previous_value")
    op.drop_column("audit_events", "target_entity")
    op.drop_column("audit_events", "action_type")
    op.drop_column("audit_events", "actor_role")
    op.drop_column("audit_events", "actor_id")
    # ### end Alembic commands ###
