"""empty message

Revision ID: f2a3ebda8787
Revises:
Create Date: 2025-10-02 07:37:07.738835

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f2a3ebda8787"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "action_submissions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "timestamp", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("action_type", sa.String(), nullable=True),
        sa.Column("amount", sa.JSON(), nullable=True),
        sa.Column("detail", sa.String(), nullable=True),
        sa.Column("expense_category", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("purchase_date", sa.DateTime(), nullable=False),
        sa.Column("purchase_type", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("vendor", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_action_submissions")),
    )
    op.create_table(
        "policies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("effective_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_policies")),
        sa.UniqueConstraint("title", name=op.f("uq_policies_title")),
    )
    op.create_table(
        "decisions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("decision_type", sa.String(), nullable=False),
        sa.Column("explanation", sa.String(), nullable=False),
        sa.Column(
            "timestamp", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("submission_id", sa.Integer(), nullable=False),
        sa.Column("matched_rule_ids", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["action_submissions.id"],
            name=op.f("fk_decisions_submission_id_action_submissions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_decisions")),
    )
    op.create_table(
        "rules",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("action", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("expense_category", sa.String(), nullable=True),
        sa.Column("field", sa.String(), nullable=True),
        sa.Column("operator", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("policy_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["policy_id"],
            ["policies.id"],
            name=op.f("fk_rules_policy_id_policies"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_rules")),
    )
    op.create_table(
        "audit_events",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "timestamp", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("explanation", sa.String(), nullable=True),
        sa.Column("user", sa.String(), nullable=True),
        sa.Column("submission_id", sa.Integer(), nullable=False),
        sa.Column("decision_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["decision_id"],
            ["decisions.id"],
            name=op.f("fk_audit_events_decision_id_decisions"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["action_submissions.id"],
            name=op.f("fk_audit_events_submission_id_action_submissions"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_audit_events")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("audit_events")
    op.drop_table("rules")
    op.drop_table("decisions")
    op.drop_table("policies")
    op.drop_table("action_submissions")
    # ### end Alembic commands ###
